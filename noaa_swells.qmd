---
title: "noaa_swells"
format: html
editor: visual
---

# Background and Motivation

With the historic rainfall and atmospheric river that has been hitting the California Coast in December 2022 and January 2023 I wanted to explore how this has appeared in the ocean swell. With this in mind I am going to explore data from the NOAA API and see what story the data tells us.

```{r}
library(tidyverse)
library(rnoaa)
library(lubridate)
library(ggplot2)


source(file = "token_id.R")

```

## Pulling in Data using 'rnoaa'

```{r}
stand_met <- buoy(dataset = "stdmet", # Standard meteorological data
                  buoyid = 46053, # East Santa Barbara Buoy ID
                  year = 9999) # Special value that, if found, contains the most up to date data
```

The code chunk above uses the api to pull in the most up to date data for the East Santa Barbara buoy. `stand_met` is saved as a 'buoy' type of data, which is not very helpful. Next I will save the data as a dataframe so it is easier to work with and we can see what the time range covers.

```{r}
swell_data <- stand_met$data # Pull data from the buoy class

head(swell_data$time) # See timeframe that data spans
tail(swell_data$time)

str(swell_data) # check the types of data in the df

# unique(swell_data$mean_wave_dir) # Check to see if wave direction has anything other than NA
```

The data covers from September 2012 to January 2023. I am mostly interested in the wave height data which has a lot of NA values in the column because the buoy only takes periodic time readings so lets take them out.

```{r}
swell_data <- swell_data %>% 
  select(time:dominant_wpd) %>% # select only these columns as they are what I am interested in
  drop_na(wave_height)   # drop NA values of wave_height column

swell_data$time <- ymd_hms(swell_data$time) #make time column into date_time format

swell_data <- swell_data %>% 
  mutate(date = date(swell_data$time),
         hour = hour(swell_data$time),
         minute = minute(swell_data$time))


```

### After that start graphing the data over time. Also could parse the data into winter averages

```{r}
ggplot(data = swell_data, aes(x = time, y = wave_height)) +
  geom_line()
```

This basic graph is helpful for a few reasons. It shows there is a gap in the data from early 2014 to mid 2015. To handle this I will likely just remove the data prior to 2015. The graph also shows the seasonality of the wave heights, with typically the tallest waves coming in the late fall to early spring. To capture this data I am going to filter from October to May. The data units can also be found here: http://www.neracoos.org/erddap/tabledap/cwwcNDBCMet.html.

```{r}
swell_data <- swell_data %>% 
  filter(date > "2015-06-01") # filter out the missing data from above and pull from 2015 to present

feet_per_meter = 3.28084

winter_swells <- swell_data %>% 
  filter(month(date) > 9 | month(date) < 6) %>% 
  mutate(wave_height = round(wave_height*feet_per_meter, 2)) %>% # convert wave_height from meters to feet so it is easier to interpret
  group_by(date) %>% 
  summarize(mean_wv_ht = mean(wave_height),
            max_wv_ht = max(wave_height),
            mean_dom_wpd = mean(dominant_wpd)) %>% 
  mutate(year = year(date),
         day_of_year = yday(date))

```

```{r}
ggplot(data = winter_swells, aes(x = day_of_year, y = mean_wv_ht, group = year, color = year)) +
  geom_line()
```

